{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../../services/platillos.service\";\nexport class PlatillosComponent {\n  constructor(fb, toastr, _ingredienteservice) {\n    this.fb = fb;\n    this.toastr = toastr;\n    this._ingredienteservice = _ingredienteservice;\n    this.listTarjeta = [];\n    this.accion = \"agregar\";\n    this.form = this.fb.group({\n      titulo: ['', Validators.required],\n      numeroTarjeta: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(16)]],\n      fechaExpiracion: ['', [Validators.required]],\n      cvv: ['', [Validators.required, Validators.maxLength(3), Validators.minLength(3)]]\n    });\n  }\n  ngOnInit() {\n    this.obtenerTarjetas();\n  }\n  obtenerTarjetas(id) {\n    this._ingredienteservice.getListTarjetas().subscribe(data => {\n      this.listTarjeta = data.meals;\n      console.log(data.meals);\n    }, error => {\n      console.log(error);\n    });\n  }\n  agregarTarjeta() {\n    const tarjeta = {\n      titulo: this.form.get('titulo')?.value,\n      numeroTarjeta: this.form.get('numeroTarjeta')?.value,\n      fechaExpiracion: this.form.get('fechaExpiracion')?.value,\n      cvv: this.form.get('cvv')?.value\n    };\n    if (this.id == undefined) {\n      /* AGREGAR */\n      this._ingredienteservice.saveTarjeta(tarjeta).subscribe(data => {\n        this.toastr.success('Tarjeta Registrada', 'Tarjeta registrada');\n        this.form.reset();\n        this.obtenerTarjetas();\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      /* editar */\n      tarjeta.id = this.id;\n      this._ingredienteservice.updateTarjeta(this.id, tarjeta).subscribe(data => {\n        this.form.reset();\n        this.accion = 'Agregar';\n        this.id = undefined;\n        this.toastr.info('Tarjeta actualizada', 'Tarjeta actualizada');\n        this.obtenerTarjetas();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  eliminarTarjeta(id) {\n    this._ingredienteservice.deleteTarjeta(id).subscribe(data => {\n      this.toastr.error('Tarjeta Eliminada con exito', 'Tarjeta Eliminada');\n      this.obtenerTarjetas();\n    }, error => {\n      console.log(error);\n    });\n  }\n  editarTarjeta(tarjeta) {\n    this.accion = 'EDITAR';\n    this.id = tarjeta.id;\n    this.form.patchValue({\n      titulo: tarjeta.titulo,\n      numeroTarjeta: tarjeta.numeroTarjeta,\n      fechaExpiracion: tarjeta.fechaExpiracion,\n      cvv: tarjeta.cvv\n    });\n  }\n}\nPlatillosComponent.ɵfac = function PlatillosComponent_Factory(t) {\n  return new (t || PlatillosComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.PlatillosService));\n};\nPlatillosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PlatillosComponent,\n  selectors: [[\"app-platillos\"]],\n  decls: 2,\n  vars: 0,\n  template: function PlatillosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"platillos works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","PlatillosComponent","constructor","fb","toastr","_ingredienteservice","form","group","titulo","required","numeroTarjeta","maxLength","minLength","fechaExpiracion","cvv","ngOnInit","obtenerTarjetas","id","getListTarjetas","subscribe","data","listTarjeta","meals","console","log","error","agregarTarjeta","tarjeta","get","value","undefined","saveTarjeta","success","reset","updateTarjeta","accion","info","eliminarTarjeta","deleteTarjeta","editarTarjeta","patchValue","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\wamp64\\www\\frontend\\src\\app\\componentes\\platillos\\platillos.component.ts","C:\\wamp64\\www\\frontend\\src\\app\\componentes\\platillos\\platillos.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { PlatillosService } from '../../services/platillos.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-platillos',\r\n  templateUrl: './platillos.component.html',\r\n  styleUrls: ['./platillos.component.css']\r\n})\r\nexport class PlatillosComponent {\r\n  listTarjeta: any[] = [\r\n\r\n  ];\r\n  accion = \"agregar\";\r\n  form: FormGroup;\r\n  id: number | undefined;\r\n\r\n  constructor(private fb: FormBuilder, private toastr: ToastrService,\r\n    private _ingredienteservice: PlatillosService\r\n  ) {\r\n    this.form = this.fb.group({\r\n      titulo: ['', Validators.required],\r\n      numeroTarjeta: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(16)]],\r\n      fechaExpiracion: ['', [Validators.required]],\r\n      cvv: ['', [Validators.required, Validators.maxLength(3), Validators.minLength(3)]],\r\n\r\n\r\n    })\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.obtenerTarjetas();\r\n  }\r\n\r\n  obtenerTarjetas(id: number) {\r\n\r\n    this._ingredienteservice.getListTarjetas().subscribe(data => {\r\n      this.listTarjeta = data.meals;\r\n      console.log(data.meals);\r\n    }, error => {\r\n      console.log(error);\r\n\r\n    })\r\n  }\r\n\r\n\r\n  agregarTarjeta() {\r\n    const tarjeta: any = {\r\n      titulo: this.form.get('titulo')?.value,\r\n      numeroTarjeta: this.form.get('numeroTarjeta')?.value,\r\n      fechaExpiracion: this.form.get('fechaExpiracion')?.value,\r\n      cvv: this.form.get('cvv')?.value,\r\n\r\n    }\r\n    if (this.id == undefined) {\r\n      /* AGREGAR */\r\n      this._ingredienteservice.saveTarjeta(tarjeta).subscribe(data => {\r\n        this.toastr.success('Tarjeta Registrada', 'Tarjeta registrada');\r\n        this.form.reset();\r\n        this.obtenerTarjetas();\r\n      }, error => {\r\n        console.log(error);\r\n      })\r\n\r\n    } else {\r\n      /* editar */\r\n      tarjeta.id = this.id;\r\n      this._ingredienteservice.updateTarjeta(this.id, tarjeta).subscribe(data => {\r\n        this.form.reset();\r\n        this.accion = 'Agregar';\r\n        this.id = undefined;\r\n        this.toastr.info('Tarjeta actualizada', 'Tarjeta actualizada');\r\n        this.obtenerTarjetas();\r\n      }, error => {\r\n        console.log(error);\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  eliminarTarjeta(id: number) {\r\n    this._ingredienteservice.deleteTarjeta(id).subscribe(data => {\r\n      this.toastr.error('Tarjeta Eliminada con exito', 'Tarjeta Eliminada');\r\n      this.obtenerTarjetas();\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n\r\n  }\r\n\r\n  editarTarjeta(tarjeta: any) {\r\n    this.accion = 'EDITAR';\r\n    this.id = tarjeta.id;\r\n    this.form.patchValue({\r\n      titulo: tarjeta.titulo,\r\n      numeroTarjeta: tarjeta.numeroTarjeta,\r\n      fechaExpiracion: tarjeta.fechaExpiracion,\r\n      cvv: tarjeta.cvv\r\n    })\r\n\r\n\r\n\r\n  }\r\n}\r\n","<p>platillos works!</p>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}